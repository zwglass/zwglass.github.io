{"version":3,"sources":["webpack:///./src/components/customer_list/customer_requests.js","webpack:///./src/components/customer_list/customer_columns_labels_config.js","webpack:///./src/components/customer_list/customer_create.js","webpack:///./src/components/customer_list/customer_info.js","webpack:///./src/components/customer_list/customer_list.js","webpack:///./src/components/customer_list/index.js"],"names":["customerOrWxBaseApis","CustomerInfoRequestPost","requestCount","reqObject","responseDataHandle","api","method","reqParams","defaultProps","respObj","console","log","CustomerInfoRequestPut","customerOrWx","customerOrWxId","useRef","useEffect","current","GetCustomerInfo","customerId","useState","setRequestCount","id","GetCustomerWxInfo","customer_id","customerInfoObjKeys","customerInfoObjInitialValues","wxInfoObjKeys","disabledKeys","formKeyLabelObj","formKeySelectComponentsObj","is_valid","options","value","label","custormer_category","wx_gender","notShowKey","formCommonStyle","customConfig","styleLayoutForm","layoutForm","styleFormItemLayout","formItemLayout","styleTailFormItemLayout","tailFormItemLayout","CustomerCreateModal","modalState","setModalState","form","Form","useForm","showOverallLoading","setShowOverallLoding","avatarCosKeyNameObj","cleanUploadedAvataListCount","setCleanUploadedAvataListCount","setFieldsValue","title","getContainer","visible","footer","closable","spinning","className","uploadedResponseHandle","fileKey","uploadedAvatar","Object","keys","includes","image_cos_name","message","error","avatarSize","cleanFileListCount","layout","onFinish","values","name","map","key","disabled","currentLabel","Item","toString","initialValue","placeholder","type","htmlType","onClick","labelCol","span","wrapperCol","xs","sm","offset","CustomerOrWxInfoForm","customerInfoObj","infoOrWx","showListOrDetail","setShowOverallLoading","customerObj","setCustomerObj","customerAvatarUrl","setCustomerAvatarUrl","cleanAvatarCount","avatarCosName","avatarEdited","avatarUrl","wx_avatar","avatar","oldImageUrl","length","src","alt","height","obj","deepcopyObj","currentInputValue","respData","success","setTimeout","CustomerOrWxInfo","customerOrWxInfoObj","customerOrWxInfoObjKeys","isInfoObj","isWxObj","forEach","val","listOrDetail","LoadMore","sendGetRequest","showLoadMoreButton","style","textAlign","marginTop","lineHeight","WxList","customerData","selectCustomerHandle","showListCount","showListOrForm","setShowListOrForm","selectedWxObj","setSelectedWxObj","wxObj","itemLayout","loadMore","dataSource","renderItem","item","actions","Meta","width","wx_nickname","wx_province","wx_city","memo_name","description","explains","CustomerList","mobile","address","CustomerWxOrInfoList","wxOrInfo","info","Search","Input","Option","Select","clickCreatedCustomerHandle","createCustomerModalState","setCreateCustomerModalState","setShowListCount","searchNickname","customerDataList","setCustomerDataList","searchCustomerType","customerWxOrInfoList","setCustomerWxOrInfoList","requestPage","maxPage","setShowLoadMoreButton","getParams","defaultValue","onChange","apisListConcat","concat","onSearch","nickname","enterButton","code","cusotmerRespomseResults","results","count","respMaxPage","Math","ceil","Number","createdCustomerObj"],"mappings":"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","file":"1fbddbfdaae7b40ce59c09bafe734eb963daeb33-6a046468b26d31d10335.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nimport AxiosRequest from '../apis';\n\n// 顾客的request请求\n\nconst customerOrWxBaseApis = ['admin-customer/v1/customer', 'admin-wxinfo/v1/customerwxinfo']\n\nconst CustomerInfoRequestPost = ({ requestCount, reqObject, responseDataHandle }) => {\n  // 新建顾客请求\n  const api = customerOrWxBaseApis[0];\n  const method = 'post';\n  const reqParams = {};\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  )\n};\n\nCustomerInfoRequestPost.defaultProps = {\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nconst CustomerInfoRequestPut = ({ customerOrWx, customerOrWxId, requestCount, reqObject, responseDataHandle }) => {\n  // customerOrWx: 0:customer; 1:微信;\n  // 修改顾客详情信息 put 请求\n  // request请求数据\n  const api = useRef(`${customerOrWxBaseApis[customerOrWx]}/${customerOrWxId}`);\n  const method = 'put';\n  const reqParams = {};\n\n  useEffect(() => {\n    api.current = `${customerOrWxBaseApis[customerOrWx]}/${customerOrWxId}`;\n  }, [customerOrWx, customerOrWxId]);\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api.current} method={method}\n      reqParams={reqParams} reqObject={reqObject} requestCount={requestCount}\n    ></AxiosRequest>\n  )\n\n}\n\nCustomerInfoRequestPut.defaultProps = {\n  customerOrWx: 0,\n  customerOrWxId: 0,\n  requestCount: 0,\n  reqObject: {},\n  responseDataHandle: (respObj) => { console.log(respObj); },\n};\n\nconst GetCustomerInfo = ({ customerId, responseDataHandle }) => {\n  // 获取顾客详情\n  const [requestCount, setRequestCount] = useState(0);\n  const reqParams = useRef({ id: customerId });\n  const reqObject = useRef({});\n  const api = 'admin-customer/v1/customer';\n  const method = 'get';\n\n  useEffect(() => {\n    reqParams.current = { id: customerId };\n    setRequestCount(requestCount + 1);\n  }, [customerId])\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams.current} reqObject={reqObject.current} requestCount={requestCount}\n    ></AxiosRequest>\n  )\n};\n\nGetCustomerInfo.defaultProps = {\n  customerId: 0,\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nconst GetCustomerWxInfo = ({ customerId, responseDataHandle }) => {\n  // 获取顾客微信详情\n  const [requestCount, setRequestCount] = useState(0);\n  const reqParams = useRef({ customer_id: customerId });\n  const reqObject = useRef({});\n  const api = 'admin-wxinfo/v1/customerwxinfo';\n  const method = 'get';\n\n  useEffect(() => {\n    if (customerId > 0) {\n      reqParams.current = { customer_id: customerId };\n      setRequestCount(requestCount + 1);\n    }\n  }, [customerId])\n\n  return (\n    <AxiosRequest\n      responseDataHandle={responseDataHandle} api={api} method={method}\n      reqParams={reqParams.current} reqObject={reqObject.current} requestCount={requestCount}\n    ></AxiosRequest>\n  )\n}\n\nGetCustomerWxInfo.defaultProps = {\n  customerId: 0,\n  responseDataHandle: (respObj) => { console.log(respObj); },\n}\n\nexport { CustomerInfoRequestPost,\n  CustomerInfoRequestPut,\n  GetCustomerInfo,\n  GetCustomerWxInfo\n};\n","import React from 'react';\nimport { CustomSelect } from '../base_components/select_component';\n\n// 顾客form表的配置\n\nconst customerInfoObjKeys = [\"id\", \"name\", \"mobile\", \"email\", \"wx_openid\",\n  \"people_id\", \"address\", \"custormer_category\", \"avatar\", \"add_time\",\n  \"update_time\", \"explains\", \"is_valid\", \"purchase_total_counts\"];\n\nconst customerInfoObjInitialValues = {\"name\": \"\", \"mobile\": \"\", \"email\": \"\",\n\"people_id\": \"\", \"address\": \"\", \"custormer_category\": 1, \"avatar\": \"\",\n\"explains\": \"\", \"is_valid\": true, };\n\nconst wxInfoObjKeys = [\"id\", \"customer_id\", \"wx_nickname\", \"memo_name\", \"wx_session_key\", \"wx_openid\", \"wx_avatar\", \"wx_country\",\n  \"wx_province\", \"wx_city\", \"wx_gender\", \"add_time\", \"update_time\", \"explains\"];\n\nconst disabledKeys = [\n  \"id\", \"customer_id\", \"wx_session_key\", \"wx_openid\", \"add_time\", \"update_time\",\n  \"purchase_total_counts\", \"wx_avatar\", \"avatar\",\n];\n\nconst formKeyLabelObj = {\n  \"id\": \"ID\", \"name\": \"姓名\", \"mobile\": \"手机\", \"email\": \"E-Mail\", \"wx_openid\": \"微信openid\",\n  \"people_id\": \"身份证\", \"address\": \"地址\", \"custormer_category\": \"顾客级别\", \"avatar\": \"头像url\",\n  \"add_time\": \"创建时间\", \"update_time\": \"更新时间\", \"explains\": \"说明\", \"is_valid\": \"有效\",\n  \"purchase_total_counts\": \"订单总数\", \"customer_id\": \"顾客ID\", \"wx_session_key\": \"微信session key\",\n  \"wx_nickname\": \"微信昵称\", \"wx_avatar\": \"微信头像url\", \"wx_country\": \"国家\", \"wx_province\": \"省\",\n  \"wx_city\": \"市\", \"wx_gender\": \"性别\", \"memo_name\": \"备注名称\"\n};\n\nconst SelectBoolean = (<CustomSelect\n  options={[{ value: true, label: '有效' }, { value: false, label: '无效' },]} />);\n\n// 1: 一般顾客, 2: 优质顾客, 3: VIP顾客\nconst SelectCustomerCategory = (<CustomSelect\n  options={[{ value: 1, label: '一般顾客' }, { value: 2, label: '优质顾客' }, { value: 3, label: 'VIP顾客' },]} />);\n\n// 0-未知, 1-男, 2-女\nconst SelectGender = (<CustomSelect\n  options={[{ value: 0, label: '未知' }, { value: 1, label: '男' }, { value: 2, label: '女' },]} />);\n\nconst formKeySelectComponentsObj = {\n  is_valid: SelectBoolean,\n  custormer_category: SelectCustomerCategory,\n  wx_gender: SelectGender\n};\n\nconst notShowKey = ['avatar', 'wx_avatar'];\n\nexport {\n  customerInfoObjKeys,\n  customerInfoObjInitialValues,\n  wxInfoObjKeys,\n  disabledKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  notShowKey\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Modal, Form, Input, Button, message, Space } from 'antd';\n\nimport UploadSingleFileHandle from '../upload_files/uploadSingleFileHandle';\nimport {\n  customerInfoObjKeys,\n  customerInfoObjInitialValues,\n  disabledKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n} from './customer_columns_labels_config';\nimport { CustomerInfoRequestPost } from './customer_requests';\nimport OverallLoading from '../overall_loading';\nimport customConfig from '../../custom_config';\n\n// 创建顾客 Form\nconst formCommonStyle = customConfig.formCommonStyle;\nconst styleLayoutForm = formCommonStyle.layoutForm;\nconst styleFormItemLayout = formCommonStyle.formItemLayout;\nconst styleTailFormItemLayout = formCommonStyle.tailFormItemLayout;\n\nconst notShowKey = [\"id\", \"wx_openid\", \"avatar\", \"add_time\", \"update_time\", \"purchase_total_counts\"];\n\nconst CustomerCreateModal = ({ modalState, setModalState, responseDataHandle }) => {\n  const [form] = Form.useForm();\n  const [showOverallLoading, setShowOverallLoding] = useState(false);\n  const avatarCosKeyNameObj = useRef({});\n\n  // request请求数据\n  const reqObject = useRef({});\n  const [requestCount, setRequestCount] = useState(0);\n  const [cleanUploadedAvataListCount, setCleanUploadedAvataListCount] = useState(0);\n\n  useEffect(() => {\n    if (modalState === false) {\n      form.setFieldsValue({ ...customerInfoObjInitialValues });\n    }\n  }, [modalState]);\n\n  const createdCustomerRequestHandle = (respObj) => {\n    // 创建成功后操作\n    setShowOverallLoding(false);\n    responseDataHandle(respObj);\n  };\n\n  const changeCustomerAvatarHandle = (respObj, fileKey) => {\n    // 上传头像后操作\n    let uploadedAvatar = '';\n    if (Object.keys(respObj).includes('image_cos_name')) {\n      uploadedAvatar = respObj.image_cos_name;\n    } else {\n      // 清空上传的文件列表\n      setCleanUploadedAvataListCount(cleanUploadedAvataListCount + 1);\n      message.error('Upload fail...');\n      message.error('上传失败')\n    }\n    avatarCosKeyNameObj.current = { 'avatar': uploadedAvatar };\n  };\n\n  const onFinish = (values) => {\n    // 提交创建表单\n    setShowOverallLoding(true);\n    reqObject.current = { ...values, ...avatarCosKeyNameObj.current };\n    setRequestCount(requestCount + 1);\n  }\n  return (\n    <Modal title=\"创建顾客\"\n      getContainer={false}\n      visible={modalState}\n      footer={null}\n      closable={false}\n    >\n      <OverallLoading spinning={showOverallLoading}></OverallLoading>\n      <div className=\"avatar-box\">\n        <UploadSingleFileHandle uploadedResponseHandle={changeCustomerAvatarHandle} avatarSize={64}\n          fileKey=\"avatar\" cleanFileListCount={cleanUploadedAvataListCount}></UploadSingleFileHandle>\n      </div>\n      <Form {...styleLayoutForm} form={form} layout=\"horizontal\" onFinish={onFinish} name=\"dynamic_rule\">\n        {customerInfoObjKeys.map((key) => {\n          if (notShowKey.includes(key)) {\n            return null;\n          }\n          const disabled = disabledKeys.includes(key);  // 是否可以编辑输入框\n          const currentLabel = formKeyLabelObj[key];\n          return (\n            <Form.Item\n              {...styleFormItemLayout}\n              name={key}\n              label={currentLabel}\n              key={key.toString()}\n              initialValue={customerInfoObjInitialValues[key]}\n            >\n              {Object.keys(formKeySelectComponentsObj).includes(key)\n                ? formKeySelectComponentsObj[key]\n                : <Input placeholder={`请输入 ${currentLabel}`} disabled={disabled} />}\n            </Form.Item>\n          )\n        })}\n\n        <Form.Item {...styleTailFormItemLayout}>\n          <Space>\n            <Button type=\"primary\" htmlType=\"submit\">创建</Button>\n            <Button onClick={() => { setModalState(false); }}>取消</Button>\n          </Space>\n        </Form.Item>\n\n        <Form.Item>\n          <CustomerInfoRequestPost\n            requestCount={requestCount}\n            reqObject={reqObject.current}\n            responseDataHandle={createdCustomerRequestHandle}></CustomerInfoRequestPost>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n};\n\nCustomerCreateModal.defaultProps = {\n  modalState: false,\n  setModalState: (modalState) => { console.log(modalState); },\n  responseDataHandle: (respObj) => {\n    // 创建顾客返回结果后操作\n    console.log(respObj);\n  }\n}\n\nexport default CustomerCreateModal;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button, message } from 'antd';\n\nimport { CustomerInfoRequestPut } from './customer_requests';\nimport UploadSingleFileHandle from '../upload_files/uploadSingleFileHandle';\n// import Zmage from 'react-zmage';\nimport OverallLoading from '../overall_loading';\nimport {\n  customerInfoObjKeys,\n  wxInfoObjKeys,\n  disabledKeys,\n  formKeyLabelObj,\n  formKeySelectComponentsObj,\n  notShowKey\n} from './customer_columns_labels_config';\n\nimport './customer_info.css';\n\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 12 },\n    sm: { span: 10 },\n  },\n  wrapperCol: {\n    xs: { span: 12 },\n    sm: { span: 14 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 2,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst CustomerOrWxInfoForm = ({ customerInfoObj, infoOrWx, showListOrDetail }) => {\n  // 显示顾客详细信息  infoOrWx: 0-customer表, 1-wxinfo表\n  const [showOverallLoading, setShowOverallLoading] = useState(false);\n  const [customerObj, setCustomerObj] = useState({});\n  const [customerAvatarUrl, setCustomerAvatarUrl] = useState('');\n  const [cleanAvatarCount, setCleanAvatarCount] = useState(0);\n  const avatarCosName = useRef('');\n  const avatarEdited = useRef(false);\n\n  // request请求数据\n  const reqObject = useRef({});\n  const [requestCount, setRequestCount] = useState(0);\n\n  useEffect(() => {\n    // 更新 customerObj\n    console.log(customerInfoObj);\n    setCustomerObj(customerInfoObj);\n    const avatarUrl = infoOrWx > 0 ? customerInfoObj.wx_avatar : customerInfoObj.avatar;\n    setCustomerAvatarUrl(avatarUrl);\n    return function cleanUp() {\n      return null;\n    };\n  }, [customerInfoObj]);\n\n  const onFinish = (obj) => {\n    // 提交表单修改顾客信息\n    // 更新response图片 key value\n    setShowOverallLoading(true);\n    const deepcopyObj = { ...obj };\n    if (avatarEdited.current && infoOrWx === 0) {\n      deepcopyObj.avatar = avatarCosName.current;\n    }\n    console.log(deepcopyObj);\n    setCustomerObj(obj);\n    reqObject.current = deepcopyObj;\n    // infoOrWx: 0-customer表, 1-wxinfo表\n    setRequestCount(requestCount + 1);  // 提交request请求\n  }\n\n  const responseDataHandle = (respData) => {\n    // 接收request数据后操作\n    setShowOverallLoading(false);\n    try {\n      console.log(respData);\n      message.success('Success!');\n      message.success('更新成功(Success)!');\n      setTimeout(() => {\n        showListOrDetail(0);\n      }, 1000);\n    } catch (error) {\n      // 更新用户数据失败\n      console.log(error);\n      message.error('Error...');\n      message.error('Error: 网络错误...');\n    }\n  };\n\n  const changeCustomerAvatarHandle = (respObj, fileKey) => {\n    // 更新顾客头像\n    console.log(fileKey);\n    avatarEdited.current = true;\n    if (Object.keys(respObj).includes('image_cos_name') && respObj.image_cos_name.length > 10) {\n      avatarCosName.current = (respObj.image_cos_name);\n    } else {\n      avatarCosName.current = '';\n      setCustomerAvatarUrl('');\n    }\n  }\n\n  return (\n    <>\n      <OverallLoading spinning={showOverallLoading}></OverallLoading>\n      <div className=\"avatar-box\">\n        {infoOrWx === 0\n          ? (<UploadSingleFileHandle\n            oldImageUrl={customerAvatarUrl}\n            avatarSize={64}\n            uploadedResponseHandle={changeCustomerAvatarHandle}\n            cleanFileListCount={cleanAvatarCount} ></UploadSingleFileHandle>)\n          : (<img src={customerAvatarUrl} alt=\"Avatar\" height=\"64px\"></img>)}\n      </div>\n      <Form {...layoutForm} layout=\"horizontal\" onFinish={onFinish} name=\"customer_info_edit\">\n        {Object.keys(customerObj).map((key) => {\n          if (notShowKey.includes(key)) {\n            return null;\n          }\n          const disabled = disabledKeys.includes(key);  // 是否可以编辑输入框\n          const currentLabel = formKeyLabelObj[key];\n          let currentInputValue = customerInfoObj[key];\n          return (\n            <Form.Item\n              {...formItemLayout}\n              name={key}\n              label={currentLabel}\n              key={key.toString()}\n              initialValue={currentInputValue}\n            >\n              {Object.keys(formKeySelectComponentsObj).includes(key)\n                ? formKeySelectComponentsObj[key]\n                : <Input placeholder={`请输入 ${currentLabel}`} disabled={disabled} />}\n            </Form.Item>\n          )\n        })}\n\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            修改\n          </Button>&nbsp;&nbsp;\n          <Button onClick={() => { showListOrDetail(0); }}>\n            取消\n          </Button>\n        </Form.Item>\n\n        <Form.Item>\n          <CustomerInfoRequestPut\n            customerOrWx={infoOrWx}\n            customerOrWxId={customerInfoObj.id}\n            requestCount={requestCount}\n            reqObject={reqObject.current}\n            responseDataHandle={responseDataHandle}></CustomerInfoRequestPut>\n        </Form.Item>\n      </Form>\n    </>\n  );\n}\n\nconst CustomerOrWxInfo = ({ customerOrWxInfoObj, showListOrDetail }) => {\n  // 显示顾客或顾客微信详细信息; ~~~~~~~~ showListOrDetail 可能存在问题\n  const customerOrWxInfoObjKeys = Object.keys(customerOrWxInfoObj);\n  let isInfoObj = true;\n  let isWxObj = true;\n  customerOrWxInfoObjKeys.forEach((val) => {\n    if (!customerInfoObjKeys.includes(val)) {\n      isInfoObj = false;\n    }\n    if (!wxInfoObjKeys.includes(val)) {\n      isWxObj = false;\n    }\n  })\n  if (isInfoObj && isWxObj) {\n    console.log('Customer object error, too many keys...');\n    return null;\n  }\n  if (!isInfoObj && !isWxObj) {\n    console.log('Customer object error, all keys error...');\n    return null;\n  }\n\n  const infoOrWx = isInfoObj ? 0 : 1;\n  return <CustomerOrWxInfoForm customerInfoObj={customerOrWxInfoObj} infoOrWx={infoOrWx} showListOrDetail={showListOrDetail} />\n}\n\nCustomerOrWxInfo.defaultProps = {\n  customerOrWxInfoObj: {},\n  showListOrDetail: (listOrDetail) => { console.log(`This is Form page! value: ${listOrDetail}`) }\n}\n\nexport default CustomerOrWxInfo;\n","import React, { useState, useEffect } from 'react';\nimport { List, Button, message } from 'antd';\n\nimport CustomerOrWxInfo from './customer_info';\nimport ImageZoom from '../base_components/image_zoom';\n\nconst LoadMore = ({ sendGetRequest, showLoadMoreButton }) => {\n  return (\n    showLoadMoreButton ?\n      (\n        <div style={{\n          textAlign: 'center',\n          marginTop: 12,\n          height: 32,\n          lineHeight: '32px',\n        }}\n        ><Button onClick={sendGetRequest}>loading more</Button>\n        </div>\n      )\n      : null\n  );\n}\n// 顾客列表\nconst WxList = ({ customerData, sendGetRequest, showLoadMoreButton, selectCustomerHandle, showListCount }) => {\n  // 顾客微信列表\n  const [showListOrForm, setShowListOrForm] = useState(0); // 0-显示list, 1-显示form\n  const [selectedWxObj, setSelectedWxObj] = useState({});\n\n  const showListOrDetail = (listOrDetail, wxObj = {}) => {\n    // 显示列表或表单; listOrDetail: 0-显示list, 1-显示form;\n    if (listOrDetail > 0) {\n      // 显示表单\n      setSelectedWxObj(wxObj);\n    }\n    setShowListOrForm(listOrDetail);\n  }\n\n  useEffect(() => {\n    // showListCount 改变显示列表 \n    // console.log('changed: ' + showListCount);\n    showListOrDetail(0);\n  }, [showListCount])\n\n  return (\n    showListOrForm < 1\n      ? (<List itemLayout=\"vertical\"\n        loadMore={<LoadMore sendGetRequest={sendGetRequest} showLoadMoreButton={showLoadMoreButton} />}\n        dataSource={customerData}\n        renderItem={item => (\n          <List.Item\n            actions={[<Button onClick={() => selectCustomerHandle(item)} type=\"link\">选择</Button>, <Button onClick={() => { showListOrDetail(1, item); }} type=\"link\">顾客详情</Button>]}\n          >\n            {/* <Skeleton avatar title={false} loading={item.loading} active> */}\n            <List.Item.Meta\n              avatar={\n                <ImageZoom width={64} alt=\"Image\" src={item.wx_avatar} />\n              }\n              title={`${item.wx_nickname} 住址: ${item.wx_province} ${item.wx_city}; 备注名: ${item.memo_name}`}\n              description={`备注: ${item.explains}`}\n            />\n            {/* </Skeleton> */}\n          </List.Item>\n        )}\n      />)\n      : <CustomerOrWxInfo customerOrWxInfoObj={selectedWxObj} showListOrDetail={showListOrDetail} />\n  )\n}\n\nconst CustomerList = ({ customerData, sendGetRequest, showLoadMoreButton, selectCustomerHandle, showListCount }) => {\n  const [showListOrForm, setShowListOrForm] = useState(0); // 0-显示list, 1-显示form\n  const [selectedWxObj, setSelectedWxObj] = useState({});\n\n  const showListOrDetail = (listOrDetail, wxObj = {}) => {\n    // 显示列表或表单; listOrDetail: 0-显示list, 1-显示form;\n    if (listOrDetail > 0) {\n      // 显示表单\n      setSelectedWxObj(wxObj);\n    }\n    setShowListOrForm(listOrDetail);\n  }\n\n  useEffect(() => {\n    // showListCount 改变显示列表\n    console.log('changed: ' + showListCount);\n    showListOrDetail(0);\n  }, [showListCount]);\n\n  return (\n    showListOrForm < 1\n      ? (<List\n        itemLayout=\"vertical\"\n        loadMore={<LoadMore sendGetRequest={sendGetRequest} showLoadMoreButton={showLoadMoreButton} />}\n        dataSource={customerData}\n        renderItem={item => (\n          <List.Item\n            actions={[<Button onClick={() => selectCustomerHandle(item)} type=\"link\">选择</Button>, <Button onClick={() => { showListOrDetail(1, item); }} type=\"link\">顾客详情</Button>]}\n          >\n            {/* <Skeleton avatar title={false} loading={item.loading} active> */}\n            <List.Item.Meta\n              avatar={\n                <ImageZoom width={64} alt=\"Image\" src={item.avatar} />\n              }\n              title={`姓名: ${item.name}, 手机: ${item.mobile}, 住址: ${item.address};`}\n              description={`备注: ${item.explains}`}\n            />\n            {/* </Skeleton> */}\n          </List.Item>\n        )}\n      />)\n      : <CustomerOrWxInfo customerOrWxInfoObj={selectedWxObj} showListOrDetail={showListOrDetail} />\n  )\n};\n\nconst CustomerWxOrInfoList = ({\n  customerData,\n  wxOrInfo,\n  sendGetRequest,\n  showLoadMoreButton,\n  selectCustomerHandle,\n  showListCount\n}) => {\n  // 显示顾客微信或顾客详情 列表 wxOrInfo > 0 显示顾客详情列表, 等于0 显示顾客微信列表\n\n  return (\n    wxOrInfo > 0 ?\n      <CustomerList\n        customerData={customerData}\n        sendGetRequest={sendGetRequest}\n        showLoadMoreButton={showLoadMoreButton}\n        selectCustomerHandle={selectCustomerHandle}\n        showListCount={showListCount} /> :\n      <WxList\n        customerData={customerData}\n        sendGetRequest={sendGetRequest}\n        showLoadMoreButton={showLoadMoreButton}\n        selectCustomerHandle={selectCustomerHandle}\n        showListCount={showListCount} />\n  )\n}\n\nCustomerWxOrInfoList.defaultProps = {\n  customerData: [],\n  wxOrInfo: 0,\n  sendGetRequest: null,\n  showLoadMoreButton: true,\n  selectCustomerHandle: (customerObj) => {\n    console.log(customerObj);\n    const name = Object.keys(customerObj).includes('name')\n      ? customerObj.name\n      : Object.keys(customerObj).includes('wx_nickname') ? customerObj.wx_nickname : 'Error Object';\n\n    message.info(`Selected ${name} !`);\n    message.info(`选择了 ${name} !`);\n  },\n  showListCount: 0\n};\n\nexport default CustomerWxOrInfoList;\n","import React, { useState, useRef } from 'react';\nimport { Input, Select, message, Button, Space } from 'antd';\n\nimport CreateCustomerModal from './customer_create';\nimport CustomerWxOrInfoList from './customer_list';\n// import { PoweroffOutlined } from '@ant-design/icons';\n\nimport AxiosRequest from '../apis';\nconst { Search } = Input;\nconst { Option } = Select;\n\n// 显示顾客列表\n\nconst CustomerList = ({ selectCustomerHandle, clickCreatedCustomerHandle }) => {\n  const [createCustomerModalState, setCreateCustomerModalState] = useState(false);\n  const [showListCount, setShowListCount] = useState(0);\n\n  const searchNickname = useRef('');\n  const [customerDataList, setCustomerDataList] = useState([]);\n  // 根据微信昵称、顾客姓名或顾客手机号查询顾客\n  const searchCustomerType = useRef('wx_nickname');\n  const [customerWxOrInfoList, setCustomerWxOrInfoList] = useState(0);\n  // request 数据\n  const requestPage = useRef(0);\n  const maxPage = useRef(1);\n\n  const [showLoadMoreButton, setShowLoadMoreButton] = useState(true);\n\n  const api = useRef('admin-wxinfo/v1/customerwxinfo');\n  const method = 'get';\n  const reqParams = useRef({ [searchCustomerType.current]: '', 'page': requestPage })\n  const reqObject = {}\n\n  const [requestCount, setRequestCount] = useState(0);\n\n  const createdCustomerHandle = (respObj) => {\n    // 创建顾客后操作\n    clickCreatedCustomerHandle(respObj);\n    setCreateCustomerModalState(false);\n  }\n\n  const responseDataHandle = (respObj) => {\n    // 把请求加载到\n    if (Object.keys(respObj).includes('code') && respObj.code === 1000) {\n      let cusotmerRespomseResults = customerDataList.concat(respObj.results);\n      setCustomerDataList(cusotmerRespomseResults);\n      if (respObj.count && typeof (respObj.count) !== 'undefined') {\n        let respMaxPage = Math.ceil(Number(respObj.count) / 10);\n        maxPage.current = respMaxPage;\n      } else {\n        maxPage.current = 1;\n      }\n    } else {\n      console.log('Error Request: ', respObj);\n    }\n  }\n\n  const sendGetRequest = () => {\n    // 发送获取顾客列表请求\n    requestPage.current = requestPage.current + 1;\n    if (requestPage.current > maxPage.current) {\n      // requestPage > maxPage 就不发送request请求\n      setShowLoadMoreButton(false);\n      console.log('Not more...');\n      return;\n    } else {\n      setShowLoadMoreButton(true);\n    }\n    let getParams = { [searchCustomerType.current]: searchNickname.current, 'page': requestPage.current };\n    // console.log(getParams);\n    reqParams.current = getParams;\n    setRequestCount(requestCount + 1);\n  }\n\n  const selectSearchCustomerTypeChange = (value) => {\n    // 选择搜索顾客的名称、微信昵称、电话, 默认微信昵称\n    const apisList = ['admin-wxinfo/v1/customerwxinfo', 'admin-customer/v1/customer']\n    searchCustomerType.current = value;\n    let apisListConcat = [].concat(apisList);\n    setCustomerDataList([]);\n    if (value === 'wx_nickname') {\n      api.current = apisListConcat[0];\n      setCustomerWxOrInfoList(0);\n    } else {\n      api.current = apisListConcat[1];\n      setCustomerWxOrInfoList(1);\n    }\n  }\n\n  const searchCustomerWxNickname = (nickname) => {\n    // 顾客微信昵称搜寻顾客\n    setShowListCount(showListCount + 1);\n    setCustomerDataList([]);\n    requestPage.current = 0;\n    maxPage.current = 1;\n    searchNickname.current = nickname;\n    sendGetRequest();\n  }\n\n  return (\n    <div>\n      <CreateCustomerModal modalState={createCustomerModalState} setModalState={setCreateCustomerModalState}\n        responseDataHandle={createdCustomerHandle}></CreateCustomerModal>\n      <Space>\n        <Select defaultValue=\"wx_nickname\" style={{ width: 120 }} onChange={selectSearchCustomerTypeChange}>\n          <Option value=\"wx_nickname\">微信昵称</Option>\n          <Option value=\"name\">顾客姓名</Option>\n          <Option value=\"mobile\">手机号码</Option>\n        </Select>\n        <Button type=\"link\" onClick={() => { setCreateCustomerModalState(true); }}>新建顾客</Button>\n      </Space><br></br><br></br>\n      <Search placeholder=\"搜索顾客微信昵称\" onSearch={searchCustomerWxNickname} enterButton />\n      <br /><br />\n      <CustomerWxOrInfoList\n        selectCustomerHandle={selectCustomerHandle}\n        customerData={customerDataList}\n        wxOrInfo={customerWxOrInfoList}\n        sendGetRequest={sendGetRequest}\n        showLoadMoreButton={showLoadMoreButton}\n        showListCount={showListCount}\n      /><br />\n\n      <AxiosRequest\n        responseDataHandle={responseDataHandle} api={api.current} method={method}\n        reqParams={reqParams.current} reqObject={reqObject} requestCount={requestCount}\n      ></AxiosRequest>\n    </div>\n  )\n}\n\nCustomerList.defaultProps = {\n  selectCustomerHandle: (customerObj) => {\n    console.log(customerObj);\n    const name = Object.keys(customerObj).includes('name')\n      ? customerObj.name\n      : Object.keys(customerObj).includes('wx_nickname') ? customerObj.wx_nickname : 'Error Object';\n\n    message.info(`Selected ${name} !`);\n    message.info(`选择了 ${name} !`);\n  },\n  clickCreatedCustomerHandle: (createdCustomerObj) => { console.log(createdCustomerObj); },\n}\n\nexport default CustomerList;\n"],"sourceRoot":""}